{"version":3,"file":"static/js/257.89471b16.chunk.js","mappings":"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","sources":["components/DiagramTab/DiagramTab.styled.js","components/Chart/Chart.jsx","components/DiagramTab/DiagramTab.jsx","pages/StatisticsSubPage/StatisticsSubPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Box = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 32px;\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    /* width: 336px; */\r\n    flex-direction: row;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    /* width: 395px; */\r\n  }\r\n`;\r\n\r\nexport const BoxChart = styled.div`\r\n  display: block;\r\n  margin-top: 8px;\r\n  min-width: 280px;\r\n  max-width: 450px;\r\n  width: 100%;\r\n  \r\n  /* height: 280px; */\r\n\r\n  @media screen and (min-width: 768px) {\r\n    /* width: 336px; */\r\n    margin-top: 20px;\r\n\r\n    max-width: none;\r\n    /* height: 336px; */\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 288px;\r\n    /* height: 288px; */\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  width: 135px;\r\n  height: 45px;\r\n  font-family: \"Poppins\";\r\n  font-size: 30px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: calc(45 / 30);\r\n`;\r\n\r\nexport const Table = styled.table`\r\n  /* table-layout: fixed; */\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n\r\n  line-height: calc(27 / 18);\r\n  \r\n  background-color: transparent;\r\n  /* border-radius: 10px; */\r\n\r\n  &:not(:first-child) {\r\n    /* margin-top: 8px; */\r\n  }\r\n`;\r\n\r\nexport const THead = styled.thead`\r\n  position: sticky;\r\n  top: 0px;\r\n  \r\n  height: 58px;\r\n\r\n  text-align: left;\r\n  background-color: var(--main-bg-color);\r\n`;\r\n\r\nexport const TBody = styled.tbody`\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n  /* padding: 0 20px; */\r\n  height: 54px;\r\n\r\n  font-weight: ${p => p.total && 700};\r\n\r\n  &:not(:last-child) && {!(p => p.total)} {\r\n    border-bottom: 1px solid #DCDCDF;\r\n    box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\r\n  }\r\n`;\r\n\r\nexport const Th = styled.th`\r\n  padding: 14px 20px;\r\n\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n  text-align: ${p => (p.left && \"left\") || (p.center && \"center\") || (p.right && \"right\")};\r\n\r\n  /* background-color: var(--main-bg-color); */\r\n\r\n  &:first-child {\r\n    border-top-left-radius: 30px;\r\n    border-bottom-left-radius: 30px;\r\n  }\r\n  &:last-child {\r\n    border-top-right-radius: 30px;\r\n    border-bottom-right-radius: 30px;\r\n  }\r\n`;\r\n\r\nexport const Td = styled.td`\r\n  padding: 0px 20px;\r\n  letter-spacing: 1px;\r\n  font-weight: ${p => p.sum && 700};\r\n  text-align: ${p => (p.left && \"left\") || (p.center && \"center\") || (p.right && \"right\")};\r\n  color: ${p => (p.typeTransaction === \"INCOME\" && p.sum ?\r\n    \"var(--incom-text-color)\" :\r\n    p.sum && \"var(--expense-text-color)\")\r\n    || (p.income && \"var(--incom-text-color)\")\r\n    || (p.expense && \"var(--expense-text-color)\")};\r\n\r\n  /* white-space: nowrap; \r\n  overflow: hidden; \r\n  text-overflow: ellipsis; */\r\n`;\r\n\r\nexport const NoTransactions = styled.p`\r\n  font-style: italic;\r\n  text-align: center;\r\n`;","import React from \"react\";\r\nimport { Chart as ChartComponent, ArcElement, Tooltip } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nexport const Chart = ({statisticsData}) => {\r\n\r\n  ChartComponent.register(ArcElement, Tooltip);\r\n\r\n  //   // const data = {\r\n  //   //   labels: [\r\n  //   //     'Red',\r\n  //   //     'Blue',\r\n  //   //     'Yellow'\r\n  //   //   ],\r\n  //   //   datasets: [{\r\n  //   //     label: 'My First Dataset',\r\n  //   //     data: [300, 50, 100],\r\n  //   //     backgroundColor: [\r\n  //   //       'rgb(255, 99, 132)',\r\n  //   //       'rgb(54, 162, 235)',\r\n  //   //       'rgb(255, 205, 86)'\r\n  //   //     ],\r\n  //   //     hoverOffset: 4\r\n  //   //   }]\r\n  //   // };\r\n\r\n  //   // const config = {\r\n  //   //   type: 'doughnut',\r\n  //   //   data: data,\r\n  //   // };\r\n\r\n\r\n  const doughnutChartData = {\r\n    labels: statisticsData.map(el => el.name),\r\n    // [\r\n    //   \"Saudi Arabia\",\r\n    //   \"Russia\",\r\n    //   \"Iraq\",\r\n    //   \"United Arab Emirates\",\r\n    //   \"Canada\"\r\n    // ],\r\n    datasets: [\r\n      {\r\n        data: statisticsData.map(el => -el.total),\r\n        backgroundColor: [\r\n          \"#FED057\",\r\n          \"#FFD8D0\",\r\n          \"#FD9498\",\r\n          \"#C5BAFF\",\r\n          \"#808080\",\r\n          \"#6E78E8\",\r\n          \"#4A56E2\",\r\n          \"#81E1FF\",\r\n          \"#24CCA7\",\r\n          \"#00AD84\",\r\n        ],\r\n        borderColor: \"black\",\r\n        borderWidth: 2\r\n      }]\r\n  };\r\n\r\n  // const chartOptions = {\r\n  //   rotation: -Math.PI,\r\n  //   cutoutPercentage: 70,\r\n  //   circumference: Math.PI,\r\n  //   legend: {\r\n  //     position: 'left',\r\n  //     height: \"200px\"\r\n  //   };\r\n\r\n  //   // const doughnutChartData = {\r\n  //   //   labels: [\"October\", \"November\", \"December\"],\r\n  //   //   datasets: [{\r\n  //   //     data: [8137119, 9431691, 10266674],\r\n  //   //     label: \"Infected People\",\r\n  //   //     backgroundColor: [\"#2FDE00\", \"#00A6B4\", \"#ff6600\"],\r\n  //   //     hoverBackgroundColor: [\"#175000\", \"#003350\", \"#993d00\"]\r\n  //   //   }]\r\n  // };\r\n\r\n  return (\r\n    <Doughnut\r\n      type=\"doughnut\"\r\n      // width=\"288px\"\r\n      // height=\"288px\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      options={{\r\n      cutoutPercentage: 70,\r\n      // radius: 144,\r\n      legend: {\r\n        display: true,\r\n        position: 'right',\r\n        height: \"200px\"\r\n      },\r\n      animation: {\r\n      animateRotate: true,\r\n      animateScale: true\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Statistics\",\r\n        fontSize: 15\r\n      },\r\n      }}\r\n      data={doughnutChartData}\r\n    />\r\n  )\r\n\r\n}\r\n\r\n\r\n","// import React, { useEffect } from 'react';\r\nimport React from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\nimport { useSelector} from 'react-redux';\r\nimport { selectTransactionsSummary } from 'redux/selectors';\r\n// import { selectTransactions, selectTransactionsSummary } from 'redux/selectors';\r\n// import { getAllTransactions, getTransactionCategories, getTransactionsSummary } from 'redux/transactions/operations';\r\nimport { Box, BoxChart, Title, Table, THead, TBody, Tr, Th, Td, NoTransactions } from './DiagramTab.styled';\r\n// import { Table } from \"components/Table/Table\";\r\nimport { Chart } from \"components/Chart/Chart\";\r\n// import { Container } from 'components/Container/Container';\r\n\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport const DiagramTab = () => {\r\n\t// const dispatch = useDispatch();\r\n\r\n\t// const transactions = useSelector(selectTransasctions);\r\n\t// const transactionsData = transactions.items;\r\n\t// const transactionsCategories = transactions.categories;\r\n\tconst transactionsSummary = useSelector(selectTransactionsSummary);\r\n\tconst { categoriesSummary, expenseSummary, incomeSummary} = transactionsSummary;\r\n\t// const { categoriesSummary, expenseSummary, incomeSummary, periodTotal } = transactionsSummary;\r\n\r\n\t// const transactionsCategories2 = dispatch(getTransactionCategories());\r\n\t// console.log(transactions);\r\n\t// console.log(transactionsSummary);\r\n\t// console.log(categoriesSummary);\r\n\r\n\t// useEffect(() => {\r\n\t// dispatch(getAllTransactions());\r\n\t// }, [dispatch]);\r\n\r\n\tconst showTransactionsStatistics = categoriesSummary.filter(e =>\r\n\t\te.type === \"EXPENSE\");\r\n\r\n\tconsole.log(showTransactionsStatistics);\r\n\r\n\t// const getCategoriesNamme = categoryId => {\r\n\t// \tconst index = transactionsCategories.findIndex(\r\n\t// \t\tcategorie => categorie.id === categoryId\r\n\t// \t);\r\n\t// \treturn transactionsCategories[index].name;\r\n\t// };\r\n\r\n\t// const handleClick = () => {\r\n\t\t// const otzet = dispatch(getTransactionsSummary({ month: 11, year: 2022 }));\r\n\t\t// const otzet =\tdispatch(getTransactionsSummary({ month: 11 }));\r\n\r\n\t\tconsole.log(categoriesSummary);\r\n\t\tconsole.log(transactionsSummary);\r\n\t\t// console.log(otzet);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Title>Statistics</Title>\r\n\t\t\t\t\t<BoxChart>\r\n\t\t\t\t\t\t<Chart statisticsData={showTransactionsStatistics} />\r\n\t\t\t\t\t</BoxChart>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <button type=\"button\" onClick={handleClick}> OK!!!!!</button> */}\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<THead>\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t<Th>Category</Th>\r\n\t\t\t\t\t\t\t<Th right>Sum</Th>\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t</THead>\r\n\t\t\t\t\t{showTransactionsStatistics.length > 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<TBody>\r\n\t\t\t\t\t\t\t\t{showTransactionsStatistics.map(\r\n\t\t\t\t\t\t\t\t\t({\r\n\t\t\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\t\t\ttotal\r\n\t\t\t\t\t\t\t\t\t}, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<Tr key={idx + name}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td left>{name}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td right>{total > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? total.toFixed(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t: (-total).toFixed(2)}</Td>\r\n\t\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<Tr total key={expenseSummary}>\r\n\t\t\t\t\t\t\t\t\t<Td left>Expenses:</Td>\r\n\t\t\t\t\t\t\t\t\t<Td right expense>{expenseSummary > 0\r\n\t\t\t\t\t\t\t\t\t\t? expenseSummary.toFixed(2)\r\n\t\t\t\t\t\t\t\t\t\t: (-expenseSummary).toFixed(2)}</Td>\r\n\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t<Tr total key={incomeSummary}>\r\n\t\t\t\t\t\t\t\t\t<Td left>Income:</Td>\r\n\t\t\t\t\t\t\t\t\t<Td right income>{incomeSummary > 0\r\n\t\t\t\t\t\t\t\t\t\t? incomeSummary.toFixed(2)\r\n\t\t\t\t\t\t\t\t\t\t: (-incomeSummary).toFixed(2)}</Td>\r\n\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t</TBody>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t<Td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t<NoTransactions>\r\n\t\t\t\t\t\t\t\t\tNo data\r\n\t\t\t\t\t\t\t\t</NoTransactions>\r\n\t\t\t\t\t\t\t</Td>\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Table>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n};\r\n","// import { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectTransactions } from 'redux/selectors';\n// import { Main } from 'components/Main/Main';\n// import { Section } from 'components/Section/Section';\n// import { Container } from 'components/Container/Container';\n// import { Balance } from 'components/Balance/Balance';\n// import { Currency } from 'components/Currency/Currency';\n// import { Info } from 'Info/Info';\n// import { HomeTab } from 'components/HomeTab/HomeTab';\n// import { Backdrop } from '../../components/Backdrop/Backdrop';\n// import { Modal } from '../../components/Modal/Modal';\n// import { ModalAddTransactions } from 'components/ModalAddTransaction/ModalAddTransaction';\n// import { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\n// import { ModalLogout } from 'components/ModalLogout/ModalLogout';\nimport { DiagramTab } from 'components/DiagramTab/DiagramTab';\n// import { NavAndInfoWrapper, HomePageWrapper } from './StatissticsSubPage.styled';\n// import {\n//   getAllTransactions,\n//   getTransactionCategories,\n// } from 'redux/transactions/operations';\n// import { Navigation } from 'components/Navigation/Navigation';\n// import { useLocation } from 'react-router-dom';\n// import { Header } from 'components/Header/Header';\n\nconst StatisticsSubPage = () => {\n\n  return (\n    <>\n      <DiagramTab />\n    </>\n  )\n}\n\nexport default StatisticsSubPage;\n\n"],"names":["Box","styled","BoxChart","Title","Table","THead","TBody","Tr","p","total","Th","left","center","right","Td","sum","typeTransaction","income","expense","NoTransactions","Chart","statisticsData","ChartComponent","ArcElement","Tooltip","doughnutChartData","labels","map","el","name","datasets","data","backgroundColor","borderColor","borderWidth","type","width","height","options","cutoutPercentage","legend","display","position","animation","animateRotate","animateScale","title","text","fontSize","DiagramTab","transactionsSummary","useSelector","selectTransactionsSummary","categoriesSummary","expenseSummary","incomeSummary","showTransactionsStatistics","filter","e","console","log","length","idx","toFixed","colspan"],"sourceRoot":""}