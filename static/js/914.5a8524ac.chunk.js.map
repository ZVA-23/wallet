{"version":3,"file":"static/js/914.5a8524ac.chunk.js","mappings":"kQAUaA,EAAe,WAC1B,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,WACHT,EAAYU,GACZ,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GAKjB,EAQKC,EAAaC,EAAAA,GAAW,CAC5Bb,SAAUa,EAAAA,KACPC,IAAI,EAAG,qCACPC,IAAI,GAAI,iCACRC,SAAS,YACZd,MAAOW,EAAAA,KAAaX,MAAM,oBAAoBc,SAAS,qBACvDZ,SAAUS,EAAAA,KACPC,IAAI,EAAG,yCACPC,IAAI,GAAI,iCACRC,SAAS,wBACZC,gBAAiBJ,EAAAA,KACdK,MAAM,CAACL,EAAAA,GAAQ,YAAa,MAAO,uBACnCG,SAAS,kCAEd,OACE,SAAC,KAAD,CACEG,cAAe,CAAEnB,SAAAA,EAAUE,MAAAA,EAAOE,SAAAA,GAClCgB,iBAAkBR,EAFpB,UAIE,UAAC,KAAD,CAAMS,SA1BW,SAAAC,GACnBA,EAAMC,iBACNjB,GAASkB,EAAAA,EAAAA,IAAS,CAAExB,SAAAA,EAAUE,MAAAA,EAAOE,SAAAA,KACrCH,EAAY,IACZE,EAAS,IACTE,EAAY,GACb,EAoBG,WACE,mCACA,SAACoB,EAAA,EAAD,CACEC,KAAK,QACLhB,KAAK,QACLiB,MAAM,SACNC,MAAM,UACNjB,MAAOT,EACP2B,SAAUrB,EACVsB,WAAY,CACVC,gBAAgB,SAACC,EAAA,EAAD,CAAgBC,SAAS,cAG7C,SAACR,EAAA,EAAD,CACEC,KAAK,WACLhB,KAAK,WACLiB,MAAM,uCACNhB,MAAOP,EACPyB,SAAUrB,EACVsB,WAAY,CACVC,gBAAgB,SAACC,EAAA,EAAD,CAAgBC,SAAS,cAG7C,SAACR,EAAA,EAAD,CACEC,KAAK,WACLhB,KAAK,kBACLiB,MAAM,0GACNhB,MAAOP,EACPyB,SAAUrB,EACVsB,WAAY,CACVC,gBAAgB,SAACC,EAAA,EAAD,CAAgBC,SAAS,cAG7C,SAACR,EAAA,EAAD,CACEC,KAAK,OACLhB,KAAK,WACLiB,MAAM,8CACNhB,MAAOX,EACP6B,SAAUrB,EACVsB,WAAY,CACVC,gBAAgB,SAACC,EAAA,EAAD,CAAgBC,SAAS,cAG7C,SAACC,EAAA,EAAD,CAAQR,KAAK,SAAb,iFACA,SAAC,KAAD,CAAMS,GAAG,SAAT,UACE,SAACD,EAAA,EAAD,CAAQE,QAAQ,WAAhB,4CAKT,ECjGD,EAPyB,WACvB,OACE,0BACE,SAACtC,EAAD,KAGL,C","sources":["components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\nimport TextField from '@mui/material/TextField';\nimport { InputAdornment } from '@mui/material';\nexport const RegisterForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'username':\n        setUsername(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(register({ username, email, password }));\n    setUsername('');\n    setEmail('');\n    setPassword('');\n  };\n  const validation = Yup.object({\n    username: Yup.string()\n      .min(1, 'Name must be at least 1 character')\n      .max(12, 'Must be 12 characters or less')\n      .required('Required'),\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 character')\n      .max(12, 'Must be 12 characters or less')\n      .required('Password is required'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Password must match')\n      .required('Confirm password is required'),\n  });\n  return (\n    <Formik\n      initialValues={{ username, email, password }}\n      validationSchema={validation}\n    >\n      <Form onSubmit={handleSubmit}>\n        <p>Wallet</p>\n        <TextField\n          type=\"email\"\n          name=\"email\"\n          label=\"E-mail\"\n          color=\"primary\"\n          value={email}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\n          }}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Пароль\"\n          value={password}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\n          }}\n        />\n        <TextField\n          type=\"password\"\n          name=\"confirmPassword\"\n          label=\"Подтвердите пароль\"\n          value={password}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\n          }}\n        />\n        <TextField\n          type=\"text\"\n          name=\"username\"\n          label=\"Ваше имя\"\n          value={username}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\n          }}\n        />\n        <Button type=\"submit\">Регистрация</Button>\n        <Link to=\"/login\">\n          <Button variant=\"outlined\">Вход</Button>\n        </Link>\n      </Form>\n    </Formik>\n  );\n};\n\n  /* <form onSubmit={handleSubmit}> */\n\n\n  /* <TextField\n        label=\"Name:\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n      />\n\n      <TextField\n        label=\"Email:\"\n        variant=\"outlined\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n\n      <TextField\n        label=\"Password:\"\n        variant=\"outlined\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />  */\n\n\n//           <Button type=\"submit\" variant=\"outlined\">\n//             Register\n//           </Button>\n//           {/* </form> */}\n//         </Form>\n//       )}\n//     </Formik>\n//   );\n// };\n","import { RegisterForm } from 'components/RegistrationForm/RegistrationForm';\n\nconst RegistrationPage = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\nexport default RegistrationPage;\n"],"names":["RegisterForm","useState","username","setUsername","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","name","value","validation","Yup","min","max","required","confirmPassword","oneOf","initialValues","validationSchema","onSubmit","event","preventDefault","register","TextField","type","label","color","onChange","InputProps","startAdornment","InputAdornment","position","Button","to","variant"],"sourceRoot":""}