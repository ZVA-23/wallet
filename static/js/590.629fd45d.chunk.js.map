{"version":3,"file":"static/js/590.629fd45d.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport frametablet from '../../images/frame-registration/frametablet.png';\nimport framedesctop from '../../images/frame-registration/framedesctop.png';\n\nexport const InputContainer = styled.label`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 8px;\n    width: 24px;\n    height: 24px;\n    fill: #e0e0e0;\n    left: 10px;\n  }\n`;\n\nexport const ConfirmPasswordLabel = styled.label`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 8px;\n    width: 24px;\n    height: 24px;\n    fill: #e0e0e0;\n    left: 10px;\n  }\n  :after {\n    opacity: ${props => (props.progressPassword ? '1' : '0')};\n    width: ${props =>\n      `${(props.confirmPassword.length / props.password.length) * 100}%`};\n\n    background-color: ${props =>\n      props.password === props.confirmPassword ? 'var(--accent-color)' : 'red'};\n\n    content: '';\n    position: absolute;\n    height: 4px;\n\n    left: 0px;\n    bottom: -5px;\n  }\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  padding: 8px 55px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  outline: none;\n\n  font-size: 18px;\n  line-height: calc(27 / 18);\n  margin-right: 20px;\n\n  &:focus {\n    border-color: var(--accent-color);\n  }\n`;\n\nexport const InActiveBtn = styled.button`\n  width: 300px;\n  padding: 13px 0;\n  background-color: #ffffff;\n  border-radius: 20px;\n  outline: 1px solid #4a56e2;\n  color: #4a56e2;\n  font-size: 18px;\n  line-height: calc(27 / 18);\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n\n  &:hover {\n    background-color: var(--search-text-color);\n    color: var(--light-text-color);\n    outline: none;\n  }\n`;\nexport const ActiveBtn = styled.button`\n  width: 300px;\n  padding: 13px 0;\n  background-color: var(--accent-color);\n  border-radius: 20px;\n  color: var(--light-text-color);\n  font-size: 18px;\n  line-height: calc(27 / 18);\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n`;\n\nexport const RegisterFormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nexport const Form = styled.form`\n  gap: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 400px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 52px;\n    padding-left: 51vw;\n    padding-right: 7vw;\n  }\n`;\n\nexport const BtnContainer = styled.div`\n  gap: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n`;\n\nexport const CreateRegisterPage = styled.div`\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    display: block;\n    background-repeat: no-repeat;\n\n    background-image: url(${frametablet});\n    width: 273.93px;\n    height: 250px;\n    left: 50%;\n    top: 60px;\n    transform: translateX(-70%);\n  }\n\n  @media screen and (min-width: 1280px) {\n    position: absolute;\n    display: block;\n    background-repeat: no-repeat;\n\n    background-image: url(${framedesctop});\n    background-size: cover;\n    width: 410px;\n    height: 412px;\n    left: 50%;\n    top: 153px;\n    transform: translateX(-110%);\n  }\n`;\n","import { validate } from 'indicative/validator';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\nimport logoWallet from '../../images/svg/logoWallet.svg';\n\nimport { toast } from 'react-toastify';\nimport { IoMdMail } from 'react-icons/io';\nimport { MdLock } from 'react-icons/md';\nimport { IoPersonSharp } from 'react-icons/io5';\nimport {\n  InputField,\n  RegisterFormContainer,\n  Form,\n  BtnContainer,\n  ActiveBtn,\n  InActiveBtn,\n  InputContainer,\n  ConfirmPasswordLabel,\n} from './RegistrationForm.styled';\n\nexport const RegisterForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [text, setText] = useState(false);\n\n  const dispatch = useDispatch();\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'username':\n        setUsername(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'confirmPassword':\n        setText(true);\n        setConfirmPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const schema = {\n    username: 'required|alpha',\n    password: 'required|min:6|max:12',\n    confirmPassword: `equals:${password}`,\n    email: 'required|email',\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const user = { username, email, password, confirmPassword };\n    validate(user, schema)\n      .then(() => {\n        const { username, email, password } = user;\n        dispatch(register({ username, email, password }));\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n      }).then(()=> toast.success('You have been registrated'))\n      .catch(() => toast.error('You have some invalid fields!'));\n  };\n\n  return (\n    <RegisterFormContainer>\n      <Form onSubmit={handleSubmit}>\n        <img src={logoWallet} alt=\"Wallet\" width=\"181\" height=\"40\" />\n        <InputContainer>\n          <IoMdMail />\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            color=\"primary\"\n            placeholder=\"E-mail\"\n            value={email}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <InputContainer>\n          <MdLock />\n          <InputField\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <ConfirmPasswordLabel\n          progressPassword={text}\n          password={password}\n          confirmPassword={confirmPassword}\n        >\n          <MdLock />\n          <InputField\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={handleChange}\n          />\n        </ConfirmPasswordLabel>\n        <InputContainer>\n          <IoPersonSharp />\n          <InputField\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"First name\"\n            value={username}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <BtnContainer>\n          <ActiveBtn type=\"submit\">Register</ActiveBtn>\n          <Link to=\"/login\">\n            <InActiveBtn variant=\"outlined\">Log in</InActiveBtn>\n          </Link>\n        </BtnContainer>\n      </Form>\n    </RegisterFormContainer>\n  );\n};\n","import { RegisterForm } from 'components/RegistrationForm/RegistrationForm';\nimport { CreateRegisterPage } from 'components/RegistrationForm/RegistrationForm.styled';\n\nconst RegistrationPage = () => {\n  return (\n    <>\n    <CreateRegisterPage />\n    <RegisterForm />\n   </>\n  );\n};\nexport default RegistrationPage;\n"],"names":["InputContainer","styled","ConfirmPasswordLabel","props","progressPassword","confirmPassword","length","password","InputField","InActiveBtn","ActiveBtn","RegisterFormContainer","Form","BtnContainer","CreateRegisterPage","frametablet","framedesctop","RegisterForm","useState","username","setUsername","email","setEmail","setPassword","setConfirmPassword","text","setText","dispatch","useDispatch","handleChange","target","name","value","schema","onSubmit","event","preventDefault","user","validate","then","register","toast","catch","src","logoWallet","alt","width","height","type","color","placeholder","onChange","to","variant"],"sourceRoot":""}