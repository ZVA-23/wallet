{"version":3,"file":"static/js/947.3dbe554e.chunk.js","mappings":"sPAEaA,EAAiBC,EAAAA,GAAAA,IAAH,0GAMdC,EAAYD,EAAAA,GAAAA,KAAH,iGAMTE,EAAcF,EAAAA,GAAAA,OAAH,+SAaXG,EAAYH,EAAAA,GAAAA,OAAH,wSAaTI,EAAaJ,EAAAA,GAAAA,MAAH,8X,SC/BVK,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACHP,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GAKjB,EAEKC,EAAQ,CACZV,MAAO,QACPE,SAAU,yBAeZ,OACE,SAACV,EAAD,WACA,UAACE,EAAD,CAAWiB,SAdQ,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAO,CAACd,MAAAA,EAAOE,SAAAA,IACrBa,EAAAA,EAAAA,IAASD,EAAMJ,GACdM,MAAK,WACJ,IAAOhB,EAAmBc,EAAnBd,MAAOE,EAAYY,EAAZZ,SAChBE,GAASa,EAAAA,EAAAA,IAAM,CAAEjB,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,GACb,IACAe,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,gCAAlB,GACN,EAGC,WACE,SAACtB,EAAD,CACEuB,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,KAAK,QACLf,KAAK,QACLgB,YAAY,SACZf,MAAOT,EACPyB,SAAUnB,EACVoB,UAAQ,KAGV,SAAC7B,EAAD,CACEuB,GAAG,kBACHC,MAAM,YACNC,QAAQ,WACRC,KAAK,WACLf,KAAK,WACLgB,YAAY,WACZf,MAAOP,EACPuB,SAAUnB,EACVqB,aAAa,QACbD,UAAQ,KAGV,SAAC9B,EAAD,CAAW2B,KAAK,SAASD,QAAQ,WAAjC,oBAGA,SAAC,KAAD,CAAMM,GAAG,YAAT,UACM,SAACjC,EAAD,CAAa4B,KAAK,SAASD,QAAQ,WAAnC,4BAKX,EC9ED,EAFkB,kBAAM,SAACxB,EAAD,GAAN,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LoginContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nmin-height: 100vh;`\n\nexport const EnterForm = styled.form`\ngap: 20px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;`\n\nexport const InActiveBtn = styled.button`\n\t/* margin: 40px 0 0; */\n\twidth: 300px;\n\tpadding: 13px 0;\n\tbackground-color: #ffffff;\n\tborder-radius: 20px;\n    outline: 2px solid #4A56E2;\n    color: #4A56E2;\n\tfont-size: 18px;\n\tline-height: calc(27 / 18);\n\tletter-spacing: 0.1em;\n\ttext-transform: uppercase;\n`\nexport const ActiveBtn = styled.button`\n\t/* margin: 40px 0 0; */\n\twidth: 300px;\n\tpadding: 13px 0;\n\tbackground-color: var(--accent-color);\n\tborder-radius: 20px;\n\tcolor: var(--light-text-color);\n\tfont-size: 18px;\n\tline-height: calc(27 / 18);\n\tletter-spacing: 0.1em;\n\ttext-transform: uppercase;\n`\n\nexport const InputField = styled.input`\n\tdisplay: block;\n\tpadding: 8px 20px;\n\tborder: none;\n\tborder-bottom:  1px solid #E0E0E0;\n\twidth: 100%;\n\toutline: none;\n\t/* font-weight: 700; */\n\tfont-size: 18px;\n\tline-height: calc(27 / 18);\n\n\t&:focus{\n\t\tborder-color: var(--accent-color);\n\t}\n\n\t/* @media (min-width: 768px)  {\n\t\twidth: 190px;\n\t\ttext-align: center;\n\t} */\n\n`","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { validate } from 'indicative/validator';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport { LoginContainer, EnterForm, InActiveBtn, InputField, ActiveBtn } from './LoginForm.styled';\n\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const schema ={\n    email: 'email',\n    password: 'required|min:6|max:12',\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const user = {email, password};\n    validate(user, schema)\n    .then(()=> {\n      const {email, password} = user;\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  })\n  .catch(() => toast.error('You have some invalid fields!'))\n  };\n  return (\n    <LoginContainer>\n    <EnterForm onSubmit={handleSubmit}>\n      <InputField\n        id=\"outlined-basic\"\n        label=\"Email:\"\n        variant=\"outlined\"\n        type=\"email\"\n        name=\"email\"\n        placeholder='E-mail'\n        value={email}\n        onChange={handleChange}\n        required\n      />\n\n      <InputField\n        id=\"outlined-basic2\"\n        label=\"Password*\"\n        variant=\"outlined\"\n        type=\"password\"\n        name=\"password\"\n        placeholder='Password'\n        value={password}\n        onChange={handleChange}\n        autoComplete=\"false\"\n        required\n      />\n\n      <ActiveBtn type=\"submit\" variant=\"outlined\">\n        Login\n      </ActiveBtn>\n      <Link to=\"/register\">\n            <InActiveBtn type=\"submit\" variant=\"outlined\" >Register</InActiveBtn>\n            </Link>\n    </EnterForm>\n    </LoginContainer>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => <LoginForm />;\n\nexport default LoginPage;\n"],"names":["LoginContainer","styled","EnterForm","InActiveBtn","ActiveBtn","InputField","LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","name","value","schema","onSubmit","event","preventDefault","user","validate","then","logIn","catch","toast","id","label","variant","type","placeholder","onChange","required","autoComplete","to"],"sourceRoot":""}